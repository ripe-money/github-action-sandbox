name: Deploy to production

on:
  issue_comment:
    types: [created]

jobs:
  merge_comment:
    name: FF-Merge `main` into `prod` on `/merge` comment
    runs-on: ubuntu-latest
    # Run only if
    # 1. The comment was made on a PR.
    # 2. The comment was made by @chucklam.
    # 3. The comment was exactly "/merge" sans the quotes.
    # 4. The PR is open.
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/merge' &&
      !github.event.issue.closed_at &&
      github.event.issue.state == 'open' &&
      github.event.comment.user.login == 'chucklam'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags. Otherwise it would default to a depth of 1.

      # Get details of the PR. The target and base branch. And also whether the PR can be merged in or not.
      - name: Get PR details
        uses: octokit/request-action@v2.x
        id: get-pr-details
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Merge (rebase) the PR if it is mergeable, and that it's from `main` into `prod`.
      - name: Merge the PR
        id: merge-status
        shell: bash
        env:
          MERGEABLE_STATUS: ${{ fromJson(steps.get-pr-details.outputs.data).mergeable_state }}
          BASE_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}
          HEAD_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if  [ "$MERGEABLE_STATUS" == "clean" ] && \
              [ "$BASE_BRANCH" == "prod" ] && \
              [ "$HEAD_BRANCH" == "main" ];
          then
            echo "ðŸ”€ Merging the PR... from $HEAD_BRANCH to $BASE_BRANCH"
            # Add your merge command here
            echo -e "\nChecking out main branch..."
            git checkout main
            git pull origin main
            git log -n 20 --pretty=format:"%h%x09%an%x09%ad%x09%s"
            echo -e "\nChecking out prod branch..."
            git checkout prod
            git pull origin prod
            git log -n 20 --pretty=format:"%h%x09%an%x09%ad%x09%s"
            echo -e "\n\nShow all branches..."
            git branch
            echo -e "\n\nMerging main into prod..."
            git merge --ff-only main
            git push origin prod
            echo "âœ… The PR has been successfully merged from $HEAD_BRANCH to $BASE_BRANCH."
          else
            echo "ðŸš« The PR is not mergeable."
          fi

      # Post a success comment to the PR.
      # https://graphite.dev/guides/how-to-post-comment-on-pr-github-actions
      - name: Add success comment to PR
        if: ${{ success() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: 'âœ… The PR has been successfully merged from `${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}` to `${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}`.'

      # Post a failure comment to the PR.
      - name: Add failure comment to PR
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: 'ðŸš« The PR cannot be merged. Please check the Actions execution tab for details.'
