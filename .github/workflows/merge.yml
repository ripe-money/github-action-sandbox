name: Override Merge

on:
  issue_comment:
    types: [created]

jobs:
  merge_comment:
    name: Merge PR
    runs-on: ubuntu-latest
    # Run only if
    # 1. The comment was made on a PR.
    # 2. The comment was made by @chucklam.
    # 3. The comment was exactly "/merge" sans the quotes.
    # 4. The PR is open.
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == '/merge' &&
      !github.event.issue.closed_at &&
      github.event.issue.state == 'open' &&
      github.event.comment.user.login == 'chucklam'

    steps:
      # - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - run: echo "The pull request number is ${{ github.event.issue.number }}."
      - name: Check out repository code
        uses: actions/checkout@v4
        # with:
        #   fetch-depth: 0
        #   token: ${{ secrets.GH_TOKEN }}

      # Get details of the PR. The target and base branch. And also whether the PR can be merged in or not.
      - name: Get PR details
        uses: octokit/request-action@v2.x
        id: get-pr-details
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Merge (rebase) the PR if it is allowed.
      - name: Merge the PR
        id: merge-status
        shell: bash
        env:
          MERGEABLE_STATUS: ${{ fromJson(steps.get-pr-details.outputs.data).mergeable_state }}
          BASE_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}
          HEAD_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}
        run: |
          if [ "$MERGEABLE_STATUS" == "clean" ]; then
            echo "🔀 Merging the PR... from $HEAD_BRANCH to $BASE_BRANCH"
            # Add your merge command here
            echo "Fetching latest changes..."
            git fetch origin
            echo "Show all branches..."
            git branch
          else
            echo "🚫 The PR is not mergeable."
          fi